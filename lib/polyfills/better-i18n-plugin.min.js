/**
 * better-i18n-plugin: Internationalization plugin for better-dom
 * @version 2.0.0-rc.2 Sun, 15 May 2016 11:43:41 GMT
 * @link https://github.com/chemerisuk/better-i18n-plugin
 * @copyright 2016 Maksim Chemerisuk
 * @license MIT
 */
function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}!function(n){"use strict";function t(n,t){var r=arguments.length<=2||void 0===arguments[2]?0:arguments[2];return t?n.replace(a,function(n){return t[r++]||n}):n}var r=[],i=[],a=/%s/g,o=n.get("documentElement"),e=function(){function n(a,o){var e=this;_classCallCheck(this,n),i.forEach(function(n,i){var s=r[i][a];s&&(e[n]=t(s,o))}),this._=t(a,o)}return n.prototype.toString=function(){var n=this;return Object.keys(this).sort(function(n){return"_"===n?1:-1}).map(function(t){return'<span lang="'+t+'">'+n[t]+"</span>"}).join("")},n.prototype.toLocaleString=function(n){return this[n||o.lang]||this._},n.prototype.valueOf=function(){return"<span>"+this.toString()+"</span>"},n}();n.importStrings=function(t,a,o){if("string"!=typeof t)throw new TypeError("lang argument must be a string");var e=i.indexOf(t),s=r[e];-1===e&&(e=i.push(t)-1,r[e]=s={},n.importStyles('span[lang="'+t+'"]',"display:none"),n.importStyles(":lang("+t+') > span[lang="'+t+'"]',"display:inline !important"),n.importStyles(":lang("+t+') > span[lang="'+t+'"] ~ span[lang]',"display:none")),"string"==typeof a?s[a]=o:Object.keys(a).forEach(function(n){s[n]=a[n]})},n.__=function(n){for(var t=arguments.length,r=Array(t>1?t-1:0),i=1;t>i;i++)r[i-1]=arguments[i];return Array.isArray(n)?n.map(function(n){return new e(n,r)}):new e(n,r)},n.i18nLiteral=function(n){for(var t=arguments.length,r=Array(t>1?t-1:0),i=1;t>i;i++)r[i-1]=arguments[i];return new e(n.join("%s"),r).toLocaleString()}}(window.DOM);