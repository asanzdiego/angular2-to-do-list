{"version":3,"sources":["google-map.js","components/google-map.js","components/google-map.ts"],"names":["__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","__param","paramIndex","decorator","core_1","require","google_map_marker_1","maps_manager_1","GoogleMapComponent","_name","_elem","_mapsManager","_this","_mapBackgroundColor","_id","counters","_map","Promise","resolve","_mapResolver","prototype","getMap","set","value","console","warn","enumerable","configurable","then","map","setCenter","lat","latitude","lng","longitude","mode","setOptions","disableDoubleClickZoom","draggable","keyboardShortcuts","scrollwheel","setZoom","minZoom","maxZoom","disableDefaultUI","mapTypeControl","rotateControl","scaleControl","streetViewControl","zoomControl","ngOnInit","createMap","nativeElement","querySelector","getOptions","addMap","toString","ngOnDestroy","removeMap","_markersSubscription","unsubscribe","ngAfterContentInit","_markers","changes","subscribe","attachMarkersToMap","filter","hasMapComponent","forEach","setMapComponent","center","zoom","backgroundColor","ContentChildren","forwardRef","GoogleMapMakerDirective","QueryList","Input","String","Boolean","Number","Component","selector","template","Attribute","ElementRef","MapsManager","exports"],"mappings":"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","file":"components/google-map.js","sourcesContent":[null,"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar core_1 = require('angular2/core');\nvar google_map_marker_1 = require('./google-map-marker');\nvar maps_manager_1 = require('../services/maps-manager');\nvar GoogleMapComponent = (function () {\n    function GoogleMapComponent(_name, _elem, _mapsManager) {\n        var _this = this;\n        this._name = _name;\n        this._elem = _elem;\n        this._mapsManager = _mapsManager;\n        this._mapBackgroundColor = null;\n        this._id = GoogleMapComponent.counters++;\n        this._map = new Promise(function (resolve) { return _this._mapResolver = resolve; });\n    }\n    GoogleMapComponent.prototype.getMap = function () {\n        return this._map;\n    };\n    Object.defineProperty(GoogleMapComponent.prototype, \"backgroundColor\", {\n        set: function (value) {\n            if (this._mapBackgroundColor) {\n                console.warn('Option \"backgroundColor\" can only be set when the map is initialized');\n                return;\n            }\n            this._mapBackgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"center\", {\n        set: function (value) {\n            this._map.then(function (map) {\n                map.setCenter({\n                    lat: value.lat || value.latitude,\n                    lng: value.lng || value.longitude\n                });\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"disableDoubleClickZoom\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ disableDoubleClickZoom: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"draggable\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ draggable: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"keyboardShortcuts\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ keyboardShortcuts: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"scrollwheel\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ scrollwheel: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"zoom\", {\n        set: function (value) {\n            this._map.then(function (map) { return map.setZoom(value); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"minZoom\", {\n        set: function (value) {\n            this._map.then(function (map) { return map.setOptions({ minZoom: value }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"maxZoom\", {\n        set: function (value) {\n            this._map.then(function (map) { return map.setOptions({ maxZoom: value }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"disableDefaultUI\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ disableDefaultUI: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"mapTypeControl\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ mapTypeControl: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"rotateControl\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ rotateControl: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"scaleControl\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ scaleControl: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"streetViewControl\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ streetViewControl: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GoogleMapComponent.prototype, \"zoomControl\", {\n        set: function (mode) {\n            this._map.then(function (map) { return map.setOptions({ zoomControl: mode }); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GoogleMapComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this._mapsManager\n            .createMap(this._elem.nativeElement.querySelector('.sk-google-map-container'), this.getOptions())\n            .then(function (map) {\n            _this._mapsManager.addMap(_this.toString(), map);\n            _this._mapResolver(map);\n        });\n    };\n    GoogleMapComponent.prototype.ngOnDestroy = function () {\n        this._mapsManager.removeMap(this._name);\n        this._markersSubscription.unsubscribe();\n    };\n    GoogleMapComponent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._markersSubscription = this._markers.changes.subscribe(function () { return _this.attachMarkersToMap(); });\n        this.attachMarkersToMap();\n    };\n    GoogleMapComponent.prototype.toString = function () {\n        return this._name ? this._name : \"sk.google-maps-\" + this._id;\n    };\n    GoogleMapComponent.prototype.attachMarkersToMap = function () {\n        var _this = this;\n        this._map.then(function (map) {\n            _this._markers\n                .filter(function (v) { return !v.hasMapComponent(); })\n                .forEach(function (v) { return v.setMapComponent(_this, map); });\n        });\n    };\n    GoogleMapComponent.prototype.getOptions = function () {\n        return {\n            center: { lat: 0, lng: 0 },\n            zoom: 8,\n            backgroundColor: this._mapBackgroundColor\n        };\n    };\n    GoogleMapComponent.counters = 0;\n    __decorate([\n        core_1.ContentChildren(core_1.forwardRef(function () { return google_map_marker_1.GoogleMapMakerDirective; }), {}), \n        __metadata('design:type', core_1.QueryList)\n    ], GoogleMapComponent.prototype, \"_markers\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String), \n        __metadata('design:paramtypes', [String])\n    ], GoogleMapComponent.prototype, \"backgroundColor\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Object), \n        __metadata('design:paramtypes', [Object])\n    ], GoogleMapComponent.prototype, \"center\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"disableDoubleClickZoom\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"draggable\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"keyboardShortcuts\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"scrollwheel\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number), \n        __metadata('design:paramtypes', [Number])\n    ], GoogleMapComponent.prototype, \"zoom\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number), \n        __metadata('design:paramtypes', [Number])\n    ], GoogleMapComponent.prototype, \"minZoom\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number), \n        __metadata('design:paramtypes', [Number])\n    ], GoogleMapComponent.prototype, \"maxZoom\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"disableDefaultUI\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"mapTypeControl\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"rotateControl\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"scaleControl\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"streetViewControl\", null);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Boolean), \n        __metadata('design:paramtypes', [Boolean])\n    ], GoogleMapComponent.prototype, \"zoomControl\", null);\n    GoogleMapComponent = __decorate([\n        core_1.Component({\n            selector: 'google-map',\n            template: '<div class=\"sk-google-map-container\" style=\"width: inherit; height: inherit\"></div>'\n        }),\n        __param(0, core_1.Attribute('name')), \n        __metadata('design:paramtypes', [String, core_1.ElementRef, maps_manager_1.MapsManager])\n    ], GoogleMapComponent);\n    return GoogleMapComponent;\n}());\nexports.GoogleMapComponent = GoogleMapComponent;\n","/**\n * Project: angular2-google-maps\n * File:  2016-03-19 21:53\n * ----------------------------------------------\n *\n * @author      Stanislav Kiryukhin <korsar.zn@gmail.com>\n * @copyright   Copyright (c) 2016, Core12 Team\n *\n * ----------------------------------------------\n * All Rights Reserved.\n * ----------------------------------------------\n */\nimport {\n    Component,\n    Input,\n    OnInit,\n    OnDestroy,\n    AfterContentInit,\n    forwardRef,\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Attribute\n} from 'angular2/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {GoogleMapMakerDirective} from './google-map-marker';\nimport {MapsManager} from '../services/maps-manager';\n\n@Component({\n    selector: 'google-map',\n    template: '<div class=\"sk-google-map-container\" style=\"width: inherit; height: inherit\"></div>'\n})\nexport class GoogleMapComponent implements OnDestroy, OnInit, AfterContentInit {\n    static counters = 0;\n\n    private _id: number;\n    private _map: Promise<google.maps.Map>;\n    private _mapResolver: (map: google.maps.Map) => void;\n    private _mapBackgroundColor: string = null;\n\n    @ContentChildren(forwardRef(() => GoogleMapMakerDirective), {})\n    private _markers: QueryList<GoogleMapMakerDirective>;\n    private _markersSubscription: Subscription;\n\n    constructor(@Attribute('name')\n                private _name: string,\n                private _elem: ElementRef,\n                private _mapsManager: MapsManager) {\n\n        this._id  = GoogleMapComponent.counters++;\n        this._map = new Promise(resolve => this._mapResolver = resolve);\n    }\n\n    getMap(): Promise<google.maps.Map> {\n        return this._map;\n    }\n\n    /**\n     * Color used for the background of the Map div.\n     * This color will be visible when tiles have not yet loaded as the user pans.\n     * Note: This option can only be set when the map is initialized.\n     */\n    @Input()\n    set backgroundColor(value: string) {\n        if (this._mapBackgroundColor) {\n            console.warn('Option \"backgroundColor\" can only be set when the map is initialized');\n            return;\n        }\n\n        this._mapBackgroundColor = value;\n    }\n\n    /**\n     * The initial Map center. Required.\n     */\n    @Input()\n    set center(value: google.maps.LatLngLiteral | Coordinates | {latitude: number, longitude: number}) {\n        this._map.then(map => {\n            map.setCenter({\n                lat: (<google.maps.LatLngLiteral>value).lat || (<Coordinates>value).latitude,\n                lng: (<google.maps.LatLngLiteral>value).lng || (<Coordinates>value).longitude\n            });\n        });\n    }\n\n\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input()\n    set disableDoubleClickZoom(mode: boolean) {\n        this._map.then(map => map.setOptions({disableDoubleClickZoom: mode}));\n    }\n\n    /**\n     * If false, prevents the map from being dragged.\n     * Dragging is enabled by default.\n     */\n    @Input()\n    set draggable(mode: boolean) {\n        this._map.then(map => map.setOptions({draggable: mode}));\n    }\n\n    /**\n     * If false, prevents the map from being controlled by the keyboard.\n     * Keyboard shortcuts are enabled by default.\n     */\n    @Input()\n    set keyboardShortcuts(mode: boolean) {\n        this._map.then(map => map.setOptions({keyboardShortcuts: mode}));\n    }\n\n    /**\n     * If false, disables scrollwheel zooming on the map.\n     * The scrollwheel is enabled by default.\n     */\n    @Input()\n    set scrollwheel(mode: boolean) {\n        this._map.then(map => map.setOptions({scrollwheel: mode}));\n    }\n\n    /*\n     * Zoom options\n     * **********************************************************\n     */\n\n    /**\n     * Map zoom level.\n     */\n    @Input()\n    set zoom(value: number) {\n        this._map.then(map => map.setZoom(value));\n    }\n\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input()\n    set minZoom(value: number) {\n        this._map.then(map => map.setOptions({minZoom: value}));\n    }\n\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input()\n    set maxZoom(value: number) {\n        this._map.then(map => map.setOptions({maxZoom: value}));\n    }\n\n    /*\n     * Control options\n     * **********************************************************\n     */\n\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input()\n    set disableDefaultUI(mode: boolean) {\n        this._map.then(map => map.setOptions({disableDefaultUI: mode}));\n    }\n\n    /**\n     * Enabled/Disabled state of the Map type control.\n     */\n    @Input()\n    set mapTypeControl(mode: boolean) {\n        this._map.then(map => map.setOptions({mapTypeControl: mode}));\n    }\n\n    /**\n     * Enabled/Disabled state of the Rotate control.\n     */\n    @Input()\n    set rotateControl(mode: boolean) {\n        this._map.then(map => map.setOptions({rotateControl: mode}));\n    }\n\n    /**\n     * Enabled/Disabled state of the Scale control.\n     */\n    @Input()\n    set scaleControl(mode: boolean) {\n        this._map.then(map => map.setOptions({scaleControl: mode}));\n    }\n\n    /**\n     * Enabled/Disabled state of the Street View Pegman control.\n     */\n    @Input()\n    set streetViewControl(mode: boolean) {\n        this._map.then(map => map.setOptions({streetViewControl: mode}));\n    }\n\n    /**\n     * Enabled/Disabled state of the Zoom control\n     */\n    @Input()\n    set zoomControl(mode: boolean) {\n        this._map.then(map => map.setOptions({zoomControl: mode}));\n    }\n\n    /*\n     * Internal logic\n     * **********************************************************\n     */\n\n    ngOnInit(): void {\n        this._mapsManager\n            .createMap(\n                this._elem.nativeElement.querySelector('.sk-google-map-container'),\n                this.getOptions())\n            .then(map => {\n                this._mapsManager.addMap(this.toString(), map);\n                this._mapResolver(map);\n            });\n    }\n\n    ngOnDestroy(): void {\n        this._mapsManager.removeMap(this._name);\n        this._markersSubscription.unsubscribe();\n    }\n\n    ngAfterContentInit(): void {\n        this._markersSubscription = this._markers.changes.subscribe(() => this.attachMarkersToMap());\n        this.attachMarkersToMap();\n    }\n\n    toString(): string {\n        return this._name ? this._name : `sk.google-maps-${this._id}`;\n    }\n\n    private attachMarkersToMap(): void {\n        this._map.then(map => {\n            this._markers\n                .filter(v => !v.hasMapComponent())\n                .forEach(v => v.setMapComponent(this, map));\n        });\n    }\n\n    private getOptions(): google.maps.MapOptions {\n        return {\n            center: <google.maps.LatLng><any>{lat: 0, lng: 0},\n            zoom: 8,\n            backgroundColor: this._mapBackgroundColor\n        }\n    }\n}\n"],"sourceRoot":"/source/"}